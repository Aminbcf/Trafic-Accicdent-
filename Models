{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "df988473",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:31.457086Z",
     "iopub.status.busy": "2025-07-16T13:22:31.456790Z",
     "iopub.status.idle": "2025-07-16T13:22:52.208840Z",
     "shell.execute_reply": "2025-07-16T13:22:52.207545Z"
    },
    "papermill": {
     "duration": 20.758962,
     "end_time": "2025-07-16T13:22:52.210721",
     "exception": false,
     "start_time": "2025-07-16T13:22:31.451759",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-07-16 13:22:37.945582: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1752672158.208207      13 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1752672158.286123      13 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/road-accidents-dataset/Road Accident Data.csv\n"
     ]
    }
   ],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import warnings\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from prophet import Prophet\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.metrics import classification_report, confusion_matrix, silhouette_score\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, Dropout\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder, MinMaxScaler\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "\n",
    "\n",
    "\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ce84b13e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:52.219411Z",
     "iopub.status.busy": "2025-07-16T13:22:52.218745Z",
     "iopub.status.idle": "2025-07-16T13:22:53.899096Z",
     "shell.execute_reply": "2025-07-16T13:22:53.898343Z"
    },
    "papermill": {
     "duration": 1.686042,
     "end_time": "2025-07-16T13:22:53.900470",
     "exception": false,
     "start_time": "2025-07-16T13:22:52.214428",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Accident_Index</th>\n",
       "      <th>Accident Date</th>\n",
       "      <th>Day_of_Week</th>\n",
       "      <th>Junction_Control</th>\n",
       "      <th>Junction_Detail</th>\n",
       "      <th>Accident_Severity</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Light_Conditions</th>\n",
       "      <th>Local_Authority_(District)</th>\n",
       "      <th>Carriageway_Hazards</th>\n",
       "      <th>...</th>\n",
       "      <th>Number_of_Casualties</th>\n",
       "      <th>Number_of_Vehicles</th>\n",
       "      <th>Police_Force</th>\n",
       "      <th>Road_Surface_Conditions</th>\n",
       "      <th>Road_Type</th>\n",
       "      <th>Speed_limit</th>\n",
       "      <th>Time</th>\n",
       "      <th>Urban_or_Rural_Area</th>\n",
       "      <th>Weather_Conditions</th>\n",
       "      <th>Vehicle_Type</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>BS0000001</td>\n",
       "      <td>01-01-2021</td>\n",
       "      <td>Thursday</td>\n",
       "      <td>Give way or uncontrolled</td>\n",
       "      <td>T or staggered junction</td>\n",
       "      <td>Serious</td>\n",
       "      <td>51.512273</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Metropolitan Police</td>\n",
       "      <td>Dry</td>\n",
       "      <td>One way street</td>\n",
       "      <td>30</td>\n",
       "      <td>15:11</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>BS0000002</td>\n",
       "      <td>05-01-2021</td>\n",
       "      <td>Monday</td>\n",
       "      <td>Give way or uncontrolled</td>\n",
       "      <td>Crossroads</td>\n",
       "      <td>Serious</td>\n",
       "      <td>51.514399</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>Metropolitan Police</td>\n",
       "      <td>Wet or damp</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>30</td>\n",
       "      <td>10:59</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Taxi/Private hire car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BS0000003</td>\n",
       "      <td>04-01-2021</td>\n",
       "      <td>Sunday</td>\n",
       "      <td>Give way or uncontrolled</td>\n",
       "      <td>T or staggered junction</td>\n",
       "      <td>Slight</td>\n",
       "      <td>51.486668</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Metropolitan Police</td>\n",
       "      <td>Dry</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>30</td>\n",
       "      <td>14:19</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Taxi/Private hire car</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>BS0000004</td>\n",
       "      <td>05-01-2021</td>\n",
       "      <td>Monday</td>\n",
       "      <td>Auto traffic signal</td>\n",
       "      <td>T or staggered junction</td>\n",
       "      <td>Serious</td>\n",
       "      <td>51.507804</td>\n",
       "      <td>Daylight</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Metropolitan Police</td>\n",
       "      <td>Frost or ice</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>30</td>\n",
       "      <td>08:10</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Other</td>\n",
       "      <td>Motorcycle over 500cc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>BS0000005</td>\n",
       "      <td>06-01-2021</td>\n",
       "      <td>Tuesday</td>\n",
       "      <td>Auto traffic signal</td>\n",
       "      <td>Crossroads</td>\n",
       "      <td>Serious</td>\n",
       "      <td>51.482076</td>\n",
       "      <td>Darkness - lights lit</td>\n",
       "      <td>Kensington and Chelsea</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Metropolitan Police</td>\n",
       "      <td>Dry</td>\n",
       "      <td>Single carriageway</td>\n",
       "      <td>30</td>\n",
       "      <td>17:25</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Fine no high winds</td>\n",
       "      <td>Car</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  Accident_Index Accident Date Day_of_Week          Junction_Control  \\\n",
       "0      BS0000001    01-01-2021    Thursday  Give way or uncontrolled   \n",
       "1      BS0000002    05-01-2021      Monday  Give way or uncontrolled   \n",
       "2      BS0000003    04-01-2021      Sunday  Give way or uncontrolled   \n",
       "3      BS0000004    05-01-2021      Monday       Auto traffic signal   \n",
       "4      BS0000005    06-01-2021     Tuesday       Auto traffic signal   \n",
       "\n",
       "           Junction_Detail Accident_Severity   Latitude  \\\n",
       "0  T or staggered junction           Serious  51.512273   \n",
       "1               Crossroads           Serious  51.514399   \n",
       "2  T or staggered junction            Slight  51.486668   \n",
       "3  T or staggered junction           Serious  51.507804   \n",
       "4               Crossroads           Serious  51.482076   \n",
       "\n",
       "        Light_Conditions Local_Authority_(District) Carriageway_Hazards  ...  \\\n",
       "0               Daylight     Kensington and Chelsea                 NaN  ...   \n",
       "1               Daylight     Kensington and Chelsea                 NaN  ...   \n",
       "2               Daylight     Kensington and Chelsea                 NaN  ...   \n",
       "3               Daylight     Kensington and Chelsea                 NaN  ...   \n",
       "4  Darkness - lights lit     Kensington and Chelsea                 NaN  ...   \n",
       "\n",
       "   Number_of_Casualties  Number_of_Vehicles         Police_Force  \\\n",
       "0                     1                   2  Metropolitan Police   \n",
       "1                    11                   2  Metropolitan Police   \n",
       "2                     1                   2  Metropolitan Police   \n",
       "3                     1                   2  Metropolitan Police   \n",
       "4                     1                   2  Metropolitan Police   \n",
       "\n",
       "  Road_Surface_Conditions           Road_Type Speed_limit   Time  \\\n",
       "0                     Dry      One way street          30  15:11   \n",
       "1             Wet or damp  Single carriageway          30  10:59   \n",
       "2                     Dry  Single carriageway          30  14:19   \n",
       "3            Frost or ice  Single carriageway          30  08:10   \n",
       "4                     Dry  Single carriageway          30  17:25   \n",
       "\n",
       "  Urban_or_Rural_Area  Weather_Conditions           Vehicle_Type  \n",
       "0               Urban  Fine no high winds                    Car  \n",
       "1               Urban  Fine no high winds  Taxi/Private hire car  \n",
       "2               Urban  Fine no high winds  Taxi/Private hire car  \n",
       "3               Urban               Other  Motorcycle over 500cc  \n",
       "4               Urban  Fine no high winds                    Car  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/kaggle/input/road-accidents-dataset/Road Accident Data.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2b4a3c48",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:53.910823Z",
     "iopub.status.busy": "2025-07-16T13:22:53.910491Z",
     "iopub.status.idle": "2025-07-16T13:22:53.984539Z",
     "shell.execute_reply": "2025-07-16T13:22:53.983860Z"
    },
    "papermill": {
     "duration": 0.081153,
     "end_time": "2025-07-16T13:22:53.986244",
     "exception": false,
     "start_time": "2025-07-16T13:22:53.905091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       Accident_Index Accident Date Day_of_Week              Junction_Control  \\\n",
      "0           BS0000001    01-01-2021    Thursday      Give way or uncontrolled   \n",
      "1           BS0000002    05-01-2021      Monday      Give way or uncontrolled   \n",
      "2           BS0000003    04-01-2021      Sunday      Give way or uncontrolled   \n",
      "3           BS0000004    05-01-2021      Monday           Auto traffic signal   \n",
      "4           BS0000005    06-01-2021     Tuesday           Auto traffic signal   \n",
      "...               ...           ...         ...                           ...   \n",
      "307968      BS0307969    18-02-2022    Thursday  Data missing or out of range   \n",
      "307969      BS0307970    21-02-2022      Sunday  Data missing or out of range   \n",
      "307970      BS0307971    23-02-2022     Tuesday      Give way or uncontrolled   \n",
      "307971      BS0307972    23-02-2022     Tuesday      Give way or uncontrolled   \n",
      "307972      BS0307973    28-02-2022      Sunday      Give way or uncontrolled   \n",
      "\n",
      "                            Junction_Detail Accident_Severity   Latitude  \\\n",
      "0                   T or staggered junction           Serious  51.512273   \n",
      "1                                Crossroads           Serious  51.514399   \n",
      "2                   T or staggered junction            Slight  51.486668   \n",
      "3                   T or staggered junction           Serious  51.507804   \n",
      "4                                Crossroads           Serious  51.482076   \n",
      "...                                     ...               ...        ...   \n",
      "307968  Not at junction or within 20 metres            Slight  57.374005   \n",
      "307969  Not at junction or within 20 metres            Slight  57.232273   \n",
      "307970              T or staggered junction            Slight  57.585044   \n",
      "307971              T or staggered junction           Serious  57.214898   \n",
      "307972              T or staggered junction           Serious  57.575210   \n",
      "\n",
      "              Light_Conditions Local_Authority_(District)  \\\n",
      "0                     Daylight     Kensington and Chelsea   \n",
      "1                     Daylight     Kensington and Chelsea   \n",
      "2                     Daylight     Kensington and Chelsea   \n",
      "3                     Daylight     Kensington and Chelsea   \n",
      "4        Darkness - lights lit     Kensington and Chelsea   \n",
      "...                        ...                        ...   \n",
      "307968                Daylight                   Highland   \n",
      "307969  Darkness - no lighting                   Highland   \n",
      "307970                Daylight                   Highland   \n",
      "307971  Darkness - no lighting                   Highland   \n",
      "307972                Daylight                   Highland   \n",
      "\n",
      "         Carriageway_Hazards  ...  Number_of_Casualties  Number_of_Vehicles  \\\n",
      "0                        NaN  ...                     1                   2   \n",
      "1                        NaN  ...                    11                   2   \n",
      "2                        NaN  ...                     1                   2   \n",
      "3                        NaN  ...                     1                   2   \n",
      "4                        NaN  ...                     1                   2   \n",
      "...                      ...  ...                   ...                 ...   \n",
      "307968                   NaN  ...                     2                   1   \n",
      "307969                   NaN  ...                     1                   1   \n",
      "307970                   NaN  ...                     1                   3   \n",
      "307971                   NaN  ...                     1                   2   \n",
      "307972  Other object on road  ...                     1                   1   \n",
      "\n",
      "               Police_Force Road_Surface_Conditions           Road_Type  \\\n",
      "0       Metropolitan Police                     Dry      One way street   \n",
      "1       Metropolitan Police             Wet or damp  Single carriageway   \n",
      "2       Metropolitan Police                     Dry  Single carriageway   \n",
      "3       Metropolitan Police            Frost or ice  Single carriageway   \n",
      "4       Metropolitan Police                     Dry  Single carriageway   \n",
      "...                     ...                     ...                 ...   \n",
      "307968             Northern                     Dry  Single carriageway   \n",
      "307969             Northern            Frost or ice  Single carriageway   \n",
      "307970             Northern            Frost or ice  Single carriageway   \n",
      "307971             Northern             Wet or damp  Single carriageway   \n",
      "307972             Northern             Wet or damp    Dual carriageway   \n",
      "\n",
      "       Speed_limit   Time Urban_or_Rural_Area     Weather_Conditions  \\\n",
      "0               30  15:11               Urban     Fine no high winds   \n",
      "1               30  10:59               Urban     Fine no high winds   \n",
      "2               30  14:19               Urban     Fine no high winds   \n",
      "3               30  08:10               Urban                  Other   \n",
      "4               30  17:25               Urban     Fine no high winds   \n",
      "...            ...    ...                 ...                    ...   \n",
      "307968          60  07:00               Rural     Fine no high winds   \n",
      "307969          60  03:00               Rural     Fine no high winds   \n",
      "307970          30  09:38               Rural     Fine no high winds   \n",
      "307971          60  18:25               Rural     Fine no high winds   \n",
      "307972          60  15:45               Rural  Snowing no high winds   \n",
      "\n",
      "                 Vehicle_Type  \n",
      "0                         Car  \n",
      "1       Taxi/Private hire car  \n",
      "2       Taxi/Private hire car  \n",
      "3       Motorcycle over 500cc  \n",
      "4                         Car  \n",
      "...                       ...  \n",
      "307968                    Car  \n",
      "307969                    Car  \n",
      "307970                    Car  \n",
      "307971  Motorcycle over 500cc  \n",
      "307972                    Car  \n",
      "\n",
      "[307973 rows x 21 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e114e324",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:53.993098Z",
     "iopub.status.busy": "2025-07-16T13:22:53.992888Z",
     "iopub.status.idle": "2025-07-16T13:22:54.233417Z",
     "shell.execute_reply": "2025-07-16T13:22:54.232440Z"
    },
    "papermill": {
     "duration": 0.246076,
     "end_time": "2025-07-16T13:22:54.235628",
     "exception": false,
     "start_time": "2025-07-16T13:22:53.989552",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Unique values in 'Accident Date' ---\n",
      "['01-01-2021' '05-01-2021' '04-01-2021' '06-01-2021' '08-01-2021'\n",
      " '02-01-2021' '07-01-2021' '10-01-2021' '16-01-2021' '12-01-2021'\n",
      " '09-01-2021' '17-01-2021' '25-01-2021' '26-01-2021' '19-01-2021'\n",
      " '27-01-2021' '21-01-2021' '22-01-2021' '31-01-2021' '03-02-2021'\n",
      " '29-01-2021' '28-01-2021' '20-01-2021' '15-01-2021' '09-02-2021'\n",
      " '23-01-2021' '10-02-2021' '30-01-2021' '12-02-2021' '16-02-2021'\n",
      " '14-02-2021' '18-02-2021' '21-02-2021' '15-02-2021' '20-02-2021'\n",
      " '27-02-2021' '18-01-2021' '07-02-2021' '23-02-2021' '22-02-2021'\n",
      " '26-02-2021' '04-03-2021' '03-03-2021' '06-03-2021' '17-02-2021'\n",
      " '09-03-2021' '10-03-2021' '02-03-2021' '25-02-2021' '14-03-2021'\n",
      " '28-02-2021' '11-02-2021' '01-03-2021' '13-03-2021' '17-03-2021'\n",
      " '24-02-2021' '20-03-2021' '05-02-2021' '21-03-2021' '24-03-2021'\n",
      " '23-03-2021' '25-03-2021' '27-03-2021' '28-03-2021' '18-03-2021'\n",
      " '30-03-2021' '01-04-2021' '31-03-2021' '03-04-2021' '06-04-2021'\n",
      " '26-03-2021' '22-03-2021' '29-03-2021' '19-03-2021' '08-04-2021'\n",
      " '09-04-2021' '12-04-2021' '10-04-2021' '15-04-2021' '14-04-2021'\n",
      " '17-04-2021' '20-04-2021' '22-04-2021' '16-04-2021' '25-04-2021'\n",
      " '26-04-2021' '23-04-2021' '24-04-2021' '27-04-2021' '29-04-2021'\n",
      " '30-04-2021' '03-05-2021' '01-05-2021' '08-05-2021' '10-05-2021'\n",
      " '06-05-2021' '07-05-2021' '13-05-2021' '02-05-2021' '15-05-2021'\n",
      " '18-05-2021' '05-05-2021' '04-05-2021' '19-05-2021' '21-05-2021'\n",
      " '23-05-2021' '16-05-2021' '26-05-2021' '17-05-2021' '20-05-2021'\n",
      " '28-05-2021' '30-06-2021' '22-05-2021' '29-05-2021' '03-06-2021'\n",
      " '31-05-2021' '02-06-2021' '01-06-2021' '06-06-2021' '05-06-2021'\n",
      " '08-06-2021' '09-06-2021' '30-05-2021' '11-06-2021' '12-06-2021'\n",
      " '10-06-2021' '16-06-2021' '15-06-2021' '14-06-2021' '17-06-2021'\n",
      " '19-06-2021' '18-06-2021' '20-06-2021' '14-08-2021' '23-06-2021'\n",
      " '26-06-2021' '28-06-2021' '25-06-2021' '27-06-2021' '21-06-2021'\n",
      " '29-06-2021' '24-06-2021' '02-07-2021' '03-07-2021' '05-07-2021'\n",
      " '04-07-2021' '01-07-2021' '07-07-2021' '10-07-2021' '08-07-2021'\n",
      " '06-07-2021' '11-07-2021' '09-07-2021' '14-07-2021' '13-07-2021'\n",
      " '16-07-2021' '15-07-2021' '20-07-2021' '18-07-2021' '19-07-2021'\n",
      " '23-07-2021' '22-07-2021' '21-07-2021' '26-07-2021' '25-07-2021'\n",
      " '28-07-2021' '29-07-2021' '02-08-2021' '27-07-2021' '01-08-2021'\n",
      " '04-08-2021' '05-08-2021' '07-08-2021' '06-08-2021' '09-08-2021'\n",
      " '08-08-2021' '31-07-2021' '10-08-2021' '12-08-2021' '13-08-2021'\n",
      " '16-08-2021' '18-08-2021' '17-08-2021' '21-08-2021' '20-08-2021'\n",
      " '15-08-2021' '24-08-2021' '23-08-2021' '27-08-2021' '31-08-2021'\n",
      " '28-08-2021' '04-09-2021' '02-09-2021' '03-09-2021' '06-09-2021'\n",
      " '08-09-2021' '09-09-2021' '14-09-2021' '12-09-2021' '01-09-2021'\n",
      " '17-09-2021' '19-09-2021' '10-09-2021' '22-09-2021' '21-09-2021'\n",
      " '15-09-2021' '16-09-2021' '25-09-2021' '27-09-2021' '23-09-2021'\n",
      " '28-09-2021' '26-09-2021' '30-09-2021' '02-10-2021' '01-10-2021'\n",
      " '03-10-2021' '06-10-2021' '29-09-2021' '12-10-2021' '09-10-2021'\n",
      " '10-10-2021' '04-10-2021' '08-10-2021' '13-10-2021' '15-10-2021'\n",
      " '18-10-2021' '17-10-2021' '19-10-2021' '20-10-2021' '22-10-2021'\n",
      " '23-10-2021' '24-10-2021' '16-10-2021' '21-10-2021' '26-10-2021'\n",
      " '28-10-2021' '30-10-2021' '01-11-2021' '29-10-2021' '03-11-2021'\n",
      " '04-11-2021' '02-11-2021' '07-11-2021' '31-10-2021' '05-11-2021'\n",
      " '06-11-2021' '10-11-2021' '11-11-2021' '12-11-2021' '13-11-2021'\n",
      " '15-11-2021' '17-11-2021' '16-11-2021' '23-11-2021' '19-11-2021'\n",
      " '25-11-2021' '28-11-2021' '30-11-2021' '01-12-2021' '03-12-2021'\n",
      " '26-11-2021' '04-12-2021' '02-12-2021' '07-12-2021' '29-11-2021'\n",
      " '08-12-2021' '05-12-2021' '11-12-2021' '13-12-2021' '09-12-2021'\n",
      " '10-12-2021' '12-12-2021' '14-12-2021' '17-12-2021' '16-12-2021'\n",
      " '18-12-2021' '19-12-2021' '15-12-2021' '06-12-2021' '21-12-2021'\n",
      " '22-12-2021' '20-12-2021' '24-12-2021' '28-12-2021' '31-12-2021'\n",
      " '30-12-2021' '14-01-2021' '06-02-2021' '13-02-2021' '12-03-2021'\n",
      " '16-03-2021' '05-03-2021' '02-04-2021' '28-04-2021' '04-04-2021'\n",
      " '07-04-2021' '21-04-2021' '11-03-2021' '12-05-2021' '14-05-2021'\n",
      " '04-06-2021' '22-06-2021' '17-07-2021' '24-07-2021' '30-07-2021'\n",
      " '12-07-2021' '11-08-2021' '25-08-2021' '30-08-2021' '24-09-2021'\n",
      " '05-09-2021' '07-10-2021' '05-10-2021' '26-12-2021' '23-12-2021'\n",
      " '27-11-2021' '24-11-2021' '18-11-2021' '20-11-2021' '24-01-2021'\n",
      " '01-02-2021' '02-02-2021' '04-02-2021' '08-02-2021' '13-01-2021'\n",
      " '11-01-2021' '19-02-2021' '07-03-2021' '08-03-2021' '15-03-2021'\n",
      " '05-04-2021' '11-04-2021' '13-04-2021' '18-04-2021' '19-04-2021'\n",
      " '09-05-2021' '11-05-2021' '24-05-2021' '25-05-2021' '27-05-2021'\n",
      " '07-06-2021' '13-06-2021' '03-08-2021' '19-08-2021' '22-08-2021'\n",
      " '26-08-2021' '29-08-2021' '07-09-2021' '11-09-2021' '13-09-2021'\n",
      " '18-09-2021' '20-09-2021' '11-10-2021' '14-10-2021' '25-10-2021'\n",
      " '27-10-2021' '09-11-2021' '08-11-2021' '14-11-2021' '21-11-2021'\n",
      " '22-11-2021' '29-12-2021' '27-12-2021' '03-01-2021' '25-12-2021'\n",
      " '11-01-2022' '12-01-2022' '02-01-2022' '04-01-2022' '18-01-2022'\n",
      " '03-01-2022' '05-01-2022' '07-01-2022' '15-01-2022' '13-01-2022'\n",
      " '14-01-2022' '17-01-2022' '19-01-2022' '10-01-2022' '24-01-2022'\n",
      " '20-01-2022' '26-01-2022' '28-01-2022' '27-01-2022' '29-01-2022'\n",
      " '25-01-2022' '31-01-2022' '02-02-2022' '05-02-2022' '03-02-2022'\n",
      " '04-02-2022' '08-02-2022' '09-02-2022' '11-02-2022' '12-02-2022'\n",
      " '06-02-2022' '13-02-2022' '14-02-2022' '28-02-2022' '16-02-2022'\n",
      " '15-02-2022' '17-02-2022' '20-02-2022' '18-02-2022' '19-02-2022'\n",
      " '23-02-2022' '21-02-2022' '22-02-2022' '24-02-2022' '25-02-2022'\n",
      " '05-03-2022' '03-03-2022' '07-03-2022' '08-03-2022' '02-03-2022'\n",
      " '06-03-2022' '04-03-2022' '10-03-2022' '15-03-2022' '12-03-2022'\n",
      " '14-03-2022' '13-03-2022' '16-03-2022' '20-03-2022' '18-03-2022'\n",
      " '23-03-2022' '19-03-2022' '24-03-2022' '25-03-2022' '27-03-2022'\n",
      " '26-03-2022' '28-03-2022' '31-03-2022' '01-04-2022' '06-04-2022'\n",
      " '30-03-2022' '22-03-2022' '05-04-2022' '16-04-2022' '07-04-2022'\n",
      " '08-04-2022' '11-04-2022' '10-04-2022' '09-04-2022' '13-04-2022'\n",
      " '14-04-2022' '02-04-2022' '12-04-2022' '04-04-2022' '23-04-2022'\n",
      " '21-04-2022' '22-04-2022' '24-04-2022' '26-04-2022' '29-04-2022'\n",
      " '01-05-2022' '30-04-2022' '04-05-2022' '27-04-2022' '05-05-2022'\n",
      " '28-04-2022' '15-04-2022' '07-05-2022' '06-05-2022' '09-05-2022'\n",
      " '08-05-2022' '02-05-2022' '17-04-2022' '10-05-2022' '03-05-2022'\n",
      " '11-05-2022' '12-05-2022' '13-05-2022' '16-05-2022' '14-05-2022'\n",
      " '17-05-2022' '19-05-2022' '20-05-2022' '23-05-2022' '25-05-2022'\n",
      " '24-05-2022' '26-05-2022' '27-05-2022' '30-05-2022' '01-06-2022'\n",
      " '29-05-2022' '28-05-2022' '31-05-2022' '03-06-2022' '21-05-2022'\n",
      " '06-06-2022' '02-06-2022' '07-06-2022' '08-06-2022' '10-06-2022'\n",
      " '11-06-2022' '12-06-2022' '17-06-2022' '16-06-2022' '19-06-2022'\n",
      " '18-06-2022' '20-06-2022' '21-06-2022' '14-06-2022' '24-06-2022'\n",
      " '22-06-2022' '23-06-2022' '28-06-2022' '26-06-2022' '27-06-2022'\n",
      " '09-06-2022' '02-07-2022' '05-07-2022' '30-06-2022' '01-07-2022'\n",
      " '25-06-2022' '07-07-2022' '11-07-2022' '09-07-2022' '12-07-2022'\n",
      " '08-07-2022' '03-07-2022' '13-07-2022' '29-06-2022' '04-07-2022'\n",
      " '17-07-2022' '18-07-2022' '21-07-2022' '16-07-2022' '22-07-2022'\n",
      " '23-07-2022' '06-07-2022' '15-07-2022' '27-07-2022' '28-07-2022'\n",
      " '31-07-2022' '20-07-2022' '30-07-2022' '05-08-2022' '29-07-2022'\n",
      " '09-08-2022' '01-08-2022' '08-08-2022' '06-08-2022' '12-08-2022'\n",
      " '03-08-2022' '13-08-2022' '10-08-2022' '18-08-2022' '22-08-2022'\n",
      " '20-08-2022' '11-08-2022' '19-08-2022' '23-08-2022' '25-08-2022'\n",
      " '31-08-2022' '29-08-2022' '28-08-2022' '03-09-2022' '05-09-2022'\n",
      " '07-09-2022' '26-08-2022' '09-09-2022' '02-09-2022' '08-09-2022'\n",
      " '12-09-2022' '11-09-2022' '15-09-2022' '14-09-2022' '18-09-2022'\n",
      " '19-09-2022' '10-09-2022' '16-09-2022' '21-09-2022' '26-09-2022'\n",
      " '01-09-2022' '20-09-2022' '23-09-2022' '06-09-2022' '25-09-2022'\n",
      " '24-09-2022' '17-09-2022' '22-09-2022' '30-09-2022' '29-09-2022'\n",
      " '01-10-2022' '02-10-2022' '03-10-2022' '04-10-2022' '06-10-2022'\n",
      " '10-10-2022' '08-10-2022' '11-10-2022' '18-10-2022' '14-10-2022'\n",
      " '09-10-2022' '13-10-2022' '07-10-2022' '16-10-2022' '23-10-2022'\n",
      " '25-10-2022' '20-10-2022' '27-10-2022' '24-10-2022' '15-10-2022'\n",
      " '26-10-2022' '28-10-2022' '29-10-2022' '01-11-2022' '30-10-2022'\n",
      " '22-10-2022' '21-10-2022' '03-11-2022' '02-11-2022' '08-11-2022'\n",
      " '10-11-2022' '05-11-2022' '14-11-2022' '06-11-2022' '11-11-2022'\n",
      " '12-11-2022' '07-11-2022' '15-11-2022' '13-11-2022' '20-11-2022'\n",
      " '18-11-2022' '17-11-2022' '09-11-2022' '16-11-2022' '25-11-2022'\n",
      " '24-11-2022' '27-11-2022' '22-11-2022' '28-11-2022' '04-11-2022'\n",
      " '23-11-2022' '05-12-2022' '06-12-2022' '07-12-2022' '08-12-2022'\n",
      " '26-11-2022' '04-12-2022' '03-12-2022' '09-12-2022' '30-11-2022'\n",
      " '11-12-2022' '19-11-2022' '15-12-2022' '29-11-2022' '10-12-2022'\n",
      " '13-12-2022' '16-12-2022' '14-12-2022' '12-12-2022' '01-12-2022'\n",
      " '20-12-2022' '24-12-2022' '21-12-2022' '31-12-2022' '23-12-2022'\n",
      " '27-12-2022' '28-12-2022' '16-01-2022' '01-01-2022' '23-01-2022'\n",
      " '21-01-2022' '10-02-2022' '26-02-2022' '29-03-2022' '21-03-2022'\n",
      " '17-03-2022' '11-03-2022' '19-04-2022' '20-04-2022' '18-05-2022'\n",
      " '04-06-2022' '15-06-2022' '04-08-2022' '16-08-2022' '17-08-2022'\n",
      " '26-07-2022' '24-07-2022' '14-07-2022' '15-08-2022' '24-08-2022'\n",
      " '30-08-2022' '27-09-2022' '28-09-2022' '05-10-2022' '19-10-2022'\n",
      " '17-10-2022' '12-10-2022' '22-12-2022' '17-12-2022' '19-12-2022'\n",
      " '08-01-2022' '09-01-2022' '06-01-2022' '22-01-2022' '30-01-2022'\n",
      " '01-02-2022' '07-02-2022' '27-02-2022' '01-03-2022' '09-03-2022'\n",
      " '03-04-2022' '18-04-2022' '25-04-2022' '15-05-2022' '22-05-2022'\n",
      " '05-06-2022' '13-06-2022' '10-07-2022' '19-07-2022' '02-08-2022'\n",
      " '07-08-2022' '14-08-2022' '21-08-2022' '27-08-2022' '04-09-2022'\n",
      " '13-09-2022' '31-10-2022' '21-11-2022' '02-12-2022' '18-12-2022'\n",
      " '29-12-2022' '30-12-2022' '26-12-2022' '25-07-2022' '25-12-2022']\n",
      "\n",
      "--- Unique values in 'Day_of_Week' ---\n",
      "['Thursday' 'Monday' 'Sunday' 'Tuesday' 'Friday' 'Wednesday' 'Saturday']\n",
      "\n",
      "--- Unique values in 'Junction_Control' ---\n",
      "['Give way or uncontrolled' 'Auto traffic signal'\n",
      " 'Data missing or out of range' 'Authorised person' 'Stop sign'\n",
      " 'Not at junction or within 20 metres' 'Auto traffic sigl']\n",
      "\n",
      "--- Unique values in 'Junction_Detail' ---\n",
      "['T or staggered junction' 'Crossroads'\n",
      " 'Not at junction or within 20 metres' 'Roundabout' 'Mini-roundabout'\n",
      " 'More than 4 arms (not roundabout)' 'Private drive or entrance'\n",
      " 'Slip road' 'Other junction']\n",
      "\n",
      "--- Unique values in 'Accident_Severity' ---\n",
      "['Serious' 'Slight' 'Fetal' 'Fatal']\n",
      "\n",
      "--- Unique values in 'Latitude' ---\n",
      "[51.512273 51.514399 51.486668 ... 57.585044 57.214898 57.57521 ]\n",
      "\n",
      "--- Unique values in 'Light_Conditions' ---\n",
      "['Daylight' 'Darkness - lights lit' 'Darkness - lighting unknown'\n",
      " 'Darkness - lights unlit' 'Darkness - no lighting']\n",
      "\n",
      "--- Unique values in 'Local_Authority_(District)' ---\n",
      "['Kensington and Chelsea' 'Hammersmith and Fulham' 'Westminster'\n",
      " 'Hounslow' 'City of London' 'Tower Hamlets' 'Hackney' 'Camden'\n",
      " 'Southwark' 'Brent' 'Haringey' 'Islington' 'Barnet' 'Ealing' 'Newham'\n",
      " 'London Airport (Heathrow)' 'Hillingdon' 'Waltham Forest' 'Redbridge'\n",
      " 'Barking and Dagenham' 'Havering' 'Lambeth' 'Croydon' 'Wandsworth'\n",
      " 'Bromley' 'Lewisham' 'Greenwich' 'Bexley' 'Harrow' 'Enfield' 'Sutton'\n",
      " 'Merton' 'Kingston upon Thames' 'Richmond upon Thames' 'Eden' 'Copeland'\n",
      " 'South Lakeland' 'Barrow-in-Furness' 'Allerdale' 'Carlisle' 'Fylde'\n",
      " 'Blackpool' 'Wyre' 'Lancaster' 'Chorley' 'West Lancashire' 'South Ribble'\n",
      " 'Preston' 'Blackburn with Darwen' 'Hyndburn' 'Ribble Valley' 'Burnley'\n",
      " 'Pendle' 'Rossendale' 'Wirral' 'Sefton' 'St. Helens' 'Liverpool'\n",
      " 'Knowsley' 'Manchester' 'Salford' 'Tameside' 'Stockport' 'Bolton' 'Wigan'\n",
      " 'Trafford' 'Bury' 'Rochdale' 'Oldham' 'Vale Royal' 'Crewe and Nantwich'\n",
      " 'Halton' 'Chester' 'Macclesfield' 'Cheshire East' 'Warrington'\n",
      " 'Crewe and ntwich' 'Cheshire West and Chester' 'Congleton'\n",
      " 'Ellesmere Port and Neston' 'Wansbeck' 'Blyth Valley' 'North Tyneside'\n",
      " 'Newcastle upon Tyne' 'Tynedale' 'Alnwick' 'South Tyneside' 'Gateshead'\n",
      " 'Castle Morpeth' 'Sunderland' 'Berwick-upon-Tweed' 'Northumberland'\n",
      " 'Durham' 'County Durham' 'Easington' 'Chester-le-Street' 'Derwentside'\n",
      " 'Wear Valley' 'Teesdale' 'Darlington' 'Sedgefield' 'Hambleton' 'York'\n",
      " 'Craven' 'Richmondshire' 'Scarborough' 'Selby' 'Harrogate' 'Ryedale'\n",
      " 'Calderdale' 'Bradford' 'Wakefield' 'Leeds' 'Kirklees' 'Doncaster'\n",
      " 'Rotherham' 'Barnsley' 'Sheffield' 'North East Lincolnshire'\n",
      " 'North Lincolnshire' 'East Riding of Yorkshire'\n",
      " 'Kingston upon Hull, City of' 'Hartlepool' 'Redcar and Cleveland'\n",
      " 'Middlesbrough' 'Stockton-on-Tees' 'Birmingham' 'Wolverhampton' 'Walsall'\n",
      " 'Dudley' 'Sandwell' 'Solihull' 'Coventry' 'Lichfield' 'Stafford'\n",
      " 'Stoke-on-Trent' 'East Staffordshire' 'Newcastle-under-Lyme'\n",
      " 'Cannock Chase' 'South Staffordshire' 'Tamworth'\n",
      " 'Staffordshire Moorlands' 'Wychavon' 'Malvern Hills' 'Worcester'\n",
      " 'Wyre Forest' 'Herefordshire, County of' 'Shropshire' 'Redditch'\n",
      " 'Bromsgrove' 'South Shropshire' 'North Shropshire'\n",
      " 'Shrewsbury and Atcham' 'Oswestry' 'Telford and Wrekin' 'Bridgnorth'\n",
      " 'Stratford-upon-Avon' 'Warwick' 'North Warwickshire' 'Rugby'\n",
      " 'Nuneaton and Bedworth' 'Amber Valley' 'Erewash' 'Bolsover'\n",
      " 'Derbyshire Dales' 'High Peak' 'Chesterfield' 'North East Derbyshire'\n",
      " 'Derby' 'South Derbyshire' 'Ashfield' 'Mansfield' 'Newark and Sherwood'\n",
      " 'Nottingham' 'Gedling' 'Bassetlaw' 'Broxtowe' 'Rushcliffe'\n",
      " 'South Kesteven' 'South Holland' 'North Kesteven' 'Lincoln'\n",
      " 'East Lindsey' 'Boston' 'West Lindsey' 'Leicester' 'Melton' 'Charnwood'\n",
      " 'Blaby' 'Harborough' 'Rutland' 'Hinckley and Bosworth'\n",
      " 'North West Leicestershire' 'Oadby and Wigston' 'Corby' 'Wellingborough'\n",
      " 'Daventry' 'Kettering' 'East Northamptonshire' 'Northampton'\n",
      " 'South Northamptonshire' 'South Cambridgeshire' 'Cambridge'\n",
      " 'Peterborough' 'East Cambridgeshire' 'Huntingdonshire' 'Fenland'\n",
      " 'Great Yarmouth' 'Norwich' 'Breckland' 'Broadland'\n",
      " \"King's Lynn and West Norfolk\" 'South Norfolk' 'North Norfolk'\n",
      " 'Mid Suffolk' 'Suffolk Coastal' 'Forest Heath' 'St. Edmundsbury'\n",
      " 'Babergh' 'Ipswich' 'Waveney' 'Bedford' 'Mid Bedfordshire'\n",
      " 'Central Bedfordshire' 'South Bedfordshire' 'Luton' 'East Hertfordshire'\n",
      " 'Broxbourne' 'Welwyn Hatfield' 'North Hertfordshire' 'Watford'\n",
      " 'Three Rivers' 'Dacorum' 'Hertsmere' 'St. Albans' 'Stevege' 'Stevenage'\n",
      " 'Braintree' 'Chelmsford' 'Epping Forest' 'Maldon' 'Tendring' 'Basildon'\n",
      " 'Brentwood' 'Southend-on-Sea' 'Colchester' 'Uttlesford' 'Harlow'\n",
      " 'Thurrock' 'Castle Point' 'Rochford' 'Aylesbury Vale' 'Wycombe'\n",
      " 'South Bucks' 'Chiltern' 'Milton Keynes' 'South Oxfordshire' 'Slough'\n",
      " 'Cherwell' 'Oxford' 'Vale of White Horse' 'West Oxfordshire'\n",
      " 'West Berkshire' 'Windsor and Maidenhead' 'Bracknell Forest' 'Reading'\n",
      " 'Wokingham' 'Rushmoor' 'Basingstoke and Deane' 'Isle of Wight' 'Hart'\n",
      " 'Portsmouth' 'Fareham' 'Southampton' 'East Hampshire' 'Winchester'\n",
      " 'Gosport' 'New Forest' 'Eastleigh' 'Test Valley' 'Havant' 'Elmbridge'\n",
      " 'Mole Valley' 'Runnymede' 'Epsom and Ewell' 'Guildford' 'Spelthorne'\n",
      " 'Reigate and Banstead' 'Waverley' 'Surrey Heath' 'Woking' 'Tandridge'\n",
      " 'Medway' 'Dartford' 'Gravesham' 'Tonbridge and Malling' 'Canterbury'\n",
      " 'Thanet' 'Swale' 'Maidstone' 'Tunbridge Wells' 'Sevenoaks' 'Shepway'\n",
      " 'Ashford' 'Dover' 'Brighton and Hove' 'Worthing' 'Hastings' 'Horsham'\n",
      " 'Wealden' 'Lewes' 'Mid Sussex' 'Eastbourne' 'Crawley' 'Rother' 'Arun'\n",
      " 'Chichester' 'Adur' 'Cornwall' 'Kerrier' 'Penwith' 'North Cornwall'\n",
      " 'Caradon' 'Plymouth' 'Torbay' 'North Devon' 'Torridge' 'Exeter'\n",
      " 'South Hams' 'West Devon' 'Restormel' 'Carrick' 'Teignbridge'\n",
      " 'East Devon' 'Mid Devon' 'Mendip' 'South Gloucestershire'\n",
      " 'North Somerset' 'Sedgemoor' 'Taunton Deane' 'Bristol, City of'\n",
      " 'South Somerset' 'West Somerset' 'Bath and North East Somerset'\n",
      " 'Cotswold' 'Gloucester' 'Stroud' 'Tewkesbury' 'Cheltenham'\n",
      " 'Forest of Dean' 'Swindon' 'Wiltshire' 'West Wiltshire' 'Salisbury'\n",
      " 'Kennet' 'North Wiltshire' 'Bournemouth' 'West Dorset' 'Poole'\n",
      " 'East Dorset' 'Christchurch' 'Purbeck' 'North Dorset'\n",
      " 'Weymouth and Portland' 'Flintshire' 'Denbighshire' 'Wrexham' 'Conwy'\n",
      " 'Gwynedd' 'Isle of Anglesey' 'Caerphilly' 'Torfaen' 'Newport'\n",
      " 'Blaeu Gwent' 'Blaenau Gwent' 'Monmouthshire' 'Rhondda, Cynon, Taff'\n",
      " 'Merthyr Tydfil' 'Cardiff' 'The Vale of Glamorgan' 'Bridgend'\n",
      " 'Neath Port Talbot' 'Swansea' 'Carmarthenshire' 'Ceredigion'\n",
      " 'Pembrokeshire' 'Powys' 'Highland' 'Western Isles' 'Orkney Islands'\n",
      " 'Shetland Islands' 'Moray' 'Aberdeenshire' 'Aberdeen City' 'Angus'\n",
      " 'Perth and Kinross' 'Dundee City' 'Fife' 'Edinburgh, City of'\n",
      " 'East Lothian' 'Scottish Borders' 'West Lothian' 'Midlothian' 'Falkirk'\n",
      " 'Stirling' 'Clackmannshire' 'Clackmannanshire' 'Glasgow City'\n",
      " 'East Dunbartonshire' 'East Renfrewshire' 'Renfrewshire' 'Inverclyde'\n",
      " 'Argyll and Bute' 'West Dunbartonshire' 'North Lanarkshire'\n",
      " 'North Larkshire' 'South Lanarkshire' 'South Larkshire' 'North Ayrshire'\n",
      " 'East Ayrshire' 'South Ayrshire' 'Dumfries and Galloway']\n",
      "\n",
      "--- Unique values in 'Carriageway_Hazards' ---\n",
      "[nan 'Pedestrian in carriageway - not injured' 'Other object on road'\n",
      " 'Any animal in carriageway (except ridden horse)' 'Previous accident'\n",
      " 'Vehicle load on road']\n",
      "\n",
      "--- Unique values in 'Longitude' ---\n",
      "[-0.201349 -0.199248 -0.179599 ... -3.862727 -3.823997 -3.895673]\n",
      "\n",
      "--- Unique values in 'Number_of_Casualties' ---\n",
      "[ 1 11  3  2  4  5  6 10  8  7  9 13 12 14 16 18 15 19 21 17 27 48 40 24\n",
      " 26 22 42 43]\n",
      "\n",
      "--- Unique values in 'Number_of_Vehicles' ---\n",
      "[ 2  1  3  4  5  9  6  8  7 10 16 13 14 11 12 32 19]\n",
      "\n",
      "--- Unique values in 'Police_Force' ---\n",
      "['Metropolitan Police' 'City of London' 'Cumbria' 'Lancashire'\n",
      " 'Merseyside' 'Greater Manchester' 'Cheshire' 'Northumbria' 'Durham'\n",
      " 'North Yorkshire' 'West Yorkshire' 'South Yorkshire' 'Humberside'\n",
      " 'Cleveland' 'West Midlands' 'Staffordshire' 'West Mercia' 'Warwickshire'\n",
      " 'Derbyshire' 'Nottinghamshire' 'Lincolnshire' 'Leicestershire'\n",
      " 'Northamptonshire' 'Cambridgeshire' 'Norfolk' 'Suffolk' 'Bedfordshire'\n",
      " 'Hertfordshire' 'Essex' 'Thames Valley' 'Hampshire' 'Surrey' 'Kent'\n",
      " 'Sussex' 'Devon and Cornwall' 'Avon and Somerset' 'Gloucestershire'\n",
      " 'Wiltshire' 'Dorset' 'North Wales' 'Gwent' 'South Wales' 'Dyfed-Powys'\n",
      " 'Northern' 'Grampian' 'Tayside' 'Fife' 'Lothian and Borders' 'Central'\n",
      " 'Strathclyde' 'Dumfries and Galloway']\n",
      "\n",
      "--- Unique values in 'Road_Surface_Conditions' ---\n",
      "['Dry' 'Wet or damp' 'Frost or ice' 'Snow' 'Flood over 3cm. deep']\n",
      "\n",
      "--- Unique values in 'Road_Type' ---\n",
      "['One way street' 'Single carriageway' 'Dual carriageway' 'Roundabout'\n",
      " 'Slip road']\n",
      "\n",
      "--- Unique values in 'Speed_limit' ---\n",
      "[30 20 50 40 70 60 10 15]\n",
      "\n",
      "--- Unique values in 'Time' ---\n",
      "['15:11' '10:59' '14:19' ... '05:17' '02:52' nan]\n",
      "\n",
      "--- Unique values in 'Urban_or_Rural_Area' ---\n",
      "['Urban' 'Rural']\n",
      "\n",
      "--- Unique values in 'Weather_Conditions' ---\n",
      "['Fine no high winds' 'Other' 'Raining no high winds'\n",
      " 'Snowing no high winds' 'Fine + high winds' 'Raining + high winds'\n",
      " 'Fog or mist' 'Snowing + high winds']\n",
      "\n",
      "--- Unique values in 'Vehicle_Type' ---\n",
      "['Car' 'Taxi/Private hire car' 'Motorcycle over 500cc'\n",
      " 'Van / Goods 3.5 tonnes mgw or under' 'Goods over 3.5t. and under 7.5t'\n",
      " 'Motorcycle 125cc and under' 'Motorcycle 50cc and under'\n",
      " 'Bus or coach (17 or more pass seats)' 'Goods 7.5 tonnes mgw and over'\n",
      " 'Other vehicle' 'Motorcycle over 125cc and up to 500cc'\n",
      " 'Agricultural vehicle' 'Minibus (8 - 16 passenger seats)' 'Pedal cycle'\n",
      " 'Ridden horse']\n",
      "\n",
      "\n",
      "[nan 'Pedestrian in carriageway - not injured' 'Other object on road'\n",
      " 'Any animal in carriageway (except ridden horse)' 'Previous accident'\n",
      " 'Vehicle load on road']\n",
      "0    NaN\n",
      "1    NaN\n",
      "2    NaN\n",
      "3    NaN\n",
      "4    NaN\n",
      "5    NaN\n",
      "6    NaN\n",
      "7    NaN\n",
      "8    NaN\n",
      "9    NaN\n",
      "Name: Carriageway_Hazards, dtype: object\n"
     ]
    }
   ],
   "source": [
    "for col in df.columns:\n",
    "    if col != 'Accident_Index':\n",
    "        print(f\"\\n--- Unique values in '{col}' ---\")\n",
    "        print(df[col].unique())\n",
    "\n",
    "print('\\n')\n",
    "print(df['Carriageway_Hazards'].unique())\n",
    "print(df['Carriageway_Hazards'].head(10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9de1c818",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:54.245766Z",
     "iopub.status.busy": "2025-07-16T13:22:54.245464Z",
     "iopub.status.idle": "2025-07-16T13:22:54.269887Z",
     "shell.execute_reply": "2025-07-16T13:22:54.268672Z"
    },
    "papermill": {
     "duration": 0.031544,
     "end_time": "2025-07-16T13:22:54.271438",
     "exception": false,
     "start_time": "2025-07-16T13:22:54.239894",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "object\n",
      "  Accident_Index Accident Date  Day_of_Week          Junction_Control  \\\n",
      "0      BS0000001    01-01-2021            4  Give way or uncontrolled   \n",
      "1      BS0000002    05-01-2021            1  Give way or uncontrolled   \n",
      "2      BS0000003    04-01-2021            0  Give way or uncontrolled   \n",
      "3      BS0000004    05-01-2021            1       Auto traffic signal   \n",
      "4      BS0000005    06-01-2021            2       Auto traffic signal   \n",
      "\n",
      "           Junction_Detail Accident_Severity   Latitude  \\\n",
      "0  T or staggered junction           Serious  51.512273   \n",
      "1               Crossroads           Serious  51.514399   \n",
      "2  T or staggered junction            Slight  51.486668   \n",
      "3  T or staggered junction           Serious  51.507804   \n",
      "4               Crossroads           Serious  51.482076   \n",
      "\n",
      "        Light_Conditions Local_Authority_(District) Carriageway_Hazards  ...  \\\n",
      "0               Daylight     Kensington and Chelsea                 NaN  ...   \n",
      "1               Daylight     Kensington and Chelsea                 NaN  ...   \n",
      "2               Daylight     Kensington and Chelsea                 NaN  ...   \n",
      "3               Daylight     Kensington and Chelsea                 NaN  ...   \n",
      "4  Darkness - lights lit     Kensington and Chelsea                 NaN  ...   \n",
      "\n",
      "   Number_of_Casualties  Number_of_Vehicles         Police_Force  \\\n",
      "0                     1                   2  Metropolitan Police   \n",
      "1                    11                   2  Metropolitan Police   \n",
      "2                     1                   2  Metropolitan Police   \n",
      "3                     1                   2  Metropolitan Police   \n",
      "4                     1                   2  Metropolitan Police   \n",
      "\n",
      "  Road_Surface_Conditions           Road_Type Speed_limit   Time  \\\n",
      "0                     Dry      One way street          30  15:11   \n",
      "1             Wet or damp  Single carriageway          30  10:59   \n",
      "2                     Dry  Single carriageway          30  14:19   \n",
      "3            Frost or ice  Single carriageway          30  08:10   \n",
      "4                     Dry  Single carriageway          30  17:25   \n",
      "\n",
      "  Urban_or_Rural_Area  Weather_Conditions           Vehicle_Type  \n",
      "0               Urban  Fine no high winds                    Car  \n",
      "1               Urban  Fine no high winds  Taxi/Private hire car  \n",
      "2               Urban  Fine no high winds  Taxi/Private hire car  \n",
      "3               Urban               Other  Motorcycle over 500cc  \n",
      "4               Urban  Fine no high winds                    Car  \n",
      "\n",
      "[5 rows x 21 columns]\n"
     ]
    }
   ],
   "source": [
    "#Encoding dates into numbers [0::6]\n",
    "print(df['Day_of_Week'].dtype)\n",
    "days_map = {\n",
    "    'Sunday': 0,\n",
    "    'Monday': 1,\n",
    "    'Tuesday': 2,\n",
    "    'Wednesday': 3,\n",
    "    'Thursday': 4,\n",
    "    'Friday': 5,\n",
    "    'Saturday': 6\n",
    "}\n",
    "\n",
    "\n",
    "df['Day_of_Week'] = df['Day_of_Week'].map(days_map)\n",
    "\n",
    "\n",
    "print(df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fe65f99c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:54.280396Z",
     "iopub.status.busy": "2025-07-16T13:22:54.280076Z",
     "iopub.status.idle": "2025-07-16T13:22:54.399603Z",
     "shell.execute_reply": "2025-07-16T13:22:54.398467Z"
    },
    "papermill": {
     "duration": 0.125396,
     "end_time": "2025-07-16T13:22:54.400928",
     "exception": false,
     "start_time": "2025-07-16T13:22:54.275532",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Give way or uncontrolled' 'Auto traffic signal'\n",
      " 'Data missing or out of range' 'Authorised person' 'Stop sign'\n",
      " 'Not at junction or within 20 metres' 'Auto traffic sigl']\n",
      "0    0.0\n",
      "1    0.0\n",
      "2    0.0\n",
      "3    1.0\n",
      "4    1.0\n",
      "Name: Junction_Control, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "print(df['Junction_Control'].unique())\n",
    "\n",
    "\n",
    "df['Junction_Control'] = df['Junction_Control'].str.strip().str.lower()\n",
    "\n",
    "\n",
    "c = {\n",
    "    'give way or uncontrolled': 0,\n",
    "    'auto traffic signal': 1,\n",
    "    'data missing or out of range': np.nan,\n",
    "    'authorised person': 2,\n",
    "    'stop sign': 3,\n",
    "    'not at junction or within 20 metres': 4,\n",
    "    'auto traffic sigl': 5  \n",
    "}\n",
    "\n",
    "\n",
    "df['Junction_Control'] = df['Junction_Control'].map(c)\n",
    "\n",
    "\n",
    "print(df['Junction_Control'].head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "63cbb4a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:54.408705Z",
     "iopub.status.busy": "2025-07-16T13:22:54.408443Z",
     "iopub.status.idle": "2025-07-16T13:22:55.551746Z",
     "shell.execute_reply": "2025-07-16T13:22:55.550821Z"
    },
    "papermill": {
     "duration": 1.14914,
     "end_time": "2025-07-16T13:22:55.553631",
     "exception": false,
     "start_time": "2025-07-16T13:22:54.404491",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.apply(lambda col: col.str.lower().str.strip() if col.dtype == 'object' else col)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "850596c8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.562819Z",
     "iopub.status.busy": "2025-07-16T13:22:55.562558Z",
     "iopub.status.idle": "2025-07-16T13:22:55.732318Z",
     "shell.execute_reply": "2025-07-16T13:22:55.731644Z"
    },
    "papermill": {
     "duration": 0.175634,
     "end_time": "2025-07-16T13:22:55.733746",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.558112",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Junction_Detail\n",
    "df['Junction_Detail'] = df['Junction_Detail'].map({\n",
    "    't or staggered junction': 0,\n",
    "    'crossroads': 1,\n",
    "    'not at junction or within 20 metres': 2,\n",
    "    'roundabout': 3,\n",
    "    'mini-roundabout': 4,\n",
    "    'more than 4 arms (not roundabout)': 5,\n",
    "    'private drive or entrance': 6,\n",
    "    'slip road': 7,\n",
    "    'other junction': 8\n",
    "})\n",
    "\n",
    "# Accident_Severity\n",
    "df['Accident_Severity'] = df['Accident_Severity'].map({\n",
    "    'slight': 0,\n",
    "    'serious': 1,\n",
    "    'fatal': 2,\n",
    "    'fetal': 2   # handling typo\n",
    "})\n",
    "\n",
    "# Light_Conditions\n",
    "df['Light_Conditions'] = df['Light_Conditions'].map({\n",
    "    'daylight': 0,\n",
    "    'darkness - lights lit': 1,\n",
    "    'darkness - lighting unknown': 2,\n",
    "    'darkness - lights unlit': 3,\n",
    "    'darkness - no lighting': 4\n",
    "})\n",
    "\n",
    "# Carriageway_Hazards\n",
    "df['Carriageway_Hazards'] = df['Carriageway_Hazards'].map({\n",
    "    'pedestrian in carriageway - not injured': 0,\n",
    "    'other object on road': 1,\n",
    "    'any animal in carriageway (except ridden horse)': 2,\n",
    "    'previous accident': 3,\n",
    "    'vehicle load on road': 4\n",
    "})\n",
    "\n",
    "# Road_Surface_Conditions\n",
    "df['Road_Surface_Conditions'] = df['Road_Surface_Conditions'].map({\n",
    "    'dry': 0,\n",
    "    'wet or damp': 1,\n",
    "    'frost or ice': 2,\n",
    "    'snow': 3,\n",
    "    'flood over 3cm. deep': 4\n",
    "})\n",
    "\n",
    "# Road_Type\n",
    "df['Road_Type'] = df['Road_Type'].map({\n",
    "    'one way street': 0,\n",
    "    'single carriageway': 1,\n",
    "    'dual carriageway': 2,\n",
    "    'roundabout': 3,\n",
    "    'slip road': 4\n",
    "})\n",
    "\n",
    "# Weather_Conditions\n",
    "df['Weather_Conditions'] = df['Weather_Conditions'].map({\n",
    "    'fine no high winds': 0,\n",
    "    'fine + high winds': 1,\n",
    "    'raining no high winds': 2,\n",
    "    'raining + high winds': 3,\n",
    "    'snowing no high winds': 4,\n",
    "    'snowing + high winds': 5,\n",
    "    'fog or mist': 6,\n",
    "    'other': 7\n",
    "})\n",
    "\n",
    "# Vehicle_Type\n",
    "df['Vehicle_Type'] = df['Vehicle_Type'].map({\n",
    "    'car': 0,\n",
    "    'taxi/private hire car': 1,\n",
    "    'motorcycle over 500cc': 2,\n",
    "    'van / goods 3.5 tonnes mgw or under': 3,\n",
    "    'goods over 3.5t. and under 7.5t': 4,\n",
    "    'goods 7.5 tonnes mgw and over': 5,\n",
    "    'motorcycle 125cc and under': 6,\n",
    "    'motorcycle 50cc and under': 7,\n",
    "    'motorcycle over 125cc and up to 500cc': 8,\n",
    "    'pedal cycle': 9,\n",
    "    'bus or coach (17 or more pass seats)': 10,\n",
    "    'minibus (8 - 16 passenger seats)': 11,\n",
    "    'agricultural vehicle': 12,\n",
    "    'ridden horse': 13,\n",
    "    'other vehicle': 14\n",
    "})\n",
    "\n",
    "# Police_Force and Local_Authority_(District) as categorical codes\n",
    "df['Police_Force'] = df['Police_Force'].astype('category').cat.codes\n",
    "df['Local_Authority_(District)'] = df['Local_Authority_(District)'].astype('category').cat.codes\n",
    "\n",
    "#urban and rural\n",
    "df['Urban_or_Rural_Area'] = df['Urban_or_Rural_Area'].map({\n",
    "    'urban':1,\n",
    "    'rural':0\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d29db2f1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.741760Z",
     "iopub.status.busy": "2025-07-16T13:22:55.741489Z",
     "iopub.status.idle": "2025-07-16T13:22:55.753841Z",
     "shell.execute_reply": "2025-07-16T13:22:55.752804Z"
    },
    "papermill": {
     "duration": 0.017853,
     "end_time": "2025-07-16T13:22:55.755170",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.737317",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accident_Index                 object\n",
      "Accident Date                  object\n",
      "Day_of_Week                     int64\n",
      "Junction_Control              float64\n",
      "Junction_Detail                 int64\n",
      "Accident_Severity               int64\n",
      "Latitude                      float64\n",
      "Light_Conditions                int64\n",
      "Local_Authority_(District)      int16\n",
      "Carriageway_Hazards           float64\n",
      "Longitude                     float64\n",
      "Number_of_Casualties            int64\n",
      "Number_of_Vehicles              int64\n",
      "Police_Force                     int8\n",
      "Road_Surface_Conditions         int64\n",
      "Road_Type                       int64\n",
      "Speed_limit                     int64\n",
      "Time                           object\n",
      "Urban_or_Rural_Area             int64\n",
      "Weather_Conditions              int64\n",
      "Vehicle_Type                    int64\n",
      "dtype: object\n",
      "  Accident_Index Accident Date  Day_of_Week  Junction_Control  \\\n",
      "0      bs0000001    01-01-2021            4               0.0   \n",
      "1      bs0000002    05-01-2021            1               0.0   \n",
      "2      bs0000003    04-01-2021            0               0.0   \n",
      "3      bs0000004    05-01-2021            1               1.0   \n",
      "4      bs0000005    06-01-2021            2               1.0   \n",
      "\n",
      "   Junction_Detail  Accident_Severity   Latitude  Light_Conditions  \\\n",
      "0                0                  1  51.512273                 0   \n",
      "1                1                  1  51.514399                 0   \n",
      "2                0                  0  51.486668                 0   \n",
      "3                0                  1  51.507804                 0   \n",
      "4                1                  1  51.482076                 1   \n",
      "\n",
      "   Local_Authority_(District)  Carriageway_Hazards  ...  Number_of_Casualties  \\\n",
      "0                         185                  NaN  ...                     1   \n",
      "1                         185                  NaN  ...                    11   \n",
      "2                         185                  NaN  ...                     1   \n",
      "3                         185                  NaN  ...                     1   \n",
      "4                         185                  NaN  ...                     1   \n",
      "\n",
      "   Number_of_Vehicles  Police_Force  Road_Surface_Conditions  Road_Type  \\\n",
      "0                   2            29                        0          0   \n",
      "1                   2            29                        1          1   \n",
      "2                   2            29                        0          1   \n",
      "3                   2            29                        2          1   \n",
      "4                   2            29                        0          1   \n",
      "\n",
      "   Speed_limit   Time Urban_or_Rural_Area  Weather_Conditions  Vehicle_Type  \n",
      "0           30  15:11                   1                   0             0  \n",
      "1           30  10:59                   1                   0             1  \n",
      "2           30  14:19                   1                   0             1  \n",
      "3           30  08:10                   1                   7             2  \n",
      "4           30  17:25                   1                   0             0  \n",
      "\n",
      "[5 rows x 21 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df.dtypes)\n",
    "print(df.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "b547ae2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.763950Z",
     "iopub.status.busy": "2025-07-16T13:22:55.763653Z",
     "iopub.status.idle": "2025-07-16T13:22:55.769685Z",
     "shell.execute_reply": "2025-07-16T13:22:55.768645Z"
    },
    "papermill": {
     "duration": 0.011998,
     "end_time": "2025-07-16T13:22:55.771023",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.759025",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<bound method Series.unique of 0         NaN\n",
      "1         NaN\n",
      "2         NaN\n",
      "3         NaN\n",
      "4         NaN\n",
      "         ... \n",
      "307968    NaN\n",
      "307969    NaN\n",
      "307970    NaN\n",
      "307971    NaN\n",
      "307972    1.0\n",
      "Name: Carriageway_Hazards, Length: 307973, dtype: float64>\n"
     ]
    }
   ],
   "source": [
    "print(df['Carriageway_Hazards'].unique)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c0c39ea0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.780803Z",
     "iopub.status.busy": "2025-07-16T13:22:55.780495Z",
     "iopub.status.idle": "2025-07-16T13:22:55.866434Z",
     "shell.execute_reply": "2025-07-16T13:22:55.865800Z"
    },
    "papermill": {
     "duration": 0.09276,
     "end_time": "2025-07-16T13:22:55.867702",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.774942",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Unique values in 'Accident Date' ---\n",
      "['01-01-2021' '05-01-2021' '04-01-2021' '06-01-2021' '08-01-2021'\n",
      " '02-01-2021' '07-01-2021' '10-01-2021' '16-01-2021' '12-01-2021'\n",
      " '09-01-2021' '17-01-2021' '25-01-2021' '26-01-2021' '19-01-2021'\n",
      " '27-01-2021' '21-01-2021' '22-01-2021' '31-01-2021' '03-02-2021'\n",
      " '29-01-2021' '28-01-2021' '20-01-2021' '15-01-2021' '09-02-2021'\n",
      " '23-01-2021' '10-02-2021' '30-01-2021' '12-02-2021' '16-02-2021'\n",
      " '14-02-2021' '18-02-2021' '21-02-2021' '15-02-2021' '20-02-2021'\n",
      " '27-02-2021' '18-01-2021' '07-02-2021' '23-02-2021' '22-02-2021'\n",
      " '26-02-2021' '04-03-2021' '03-03-2021' '06-03-2021' '17-02-2021'\n",
      " '09-03-2021' '10-03-2021' '02-03-2021' '25-02-2021' '14-03-2021'\n",
      " '28-02-2021' '11-02-2021' '01-03-2021' '13-03-2021' '17-03-2021'\n",
      " '24-02-2021' '20-03-2021' '05-02-2021' '21-03-2021' '24-03-2021'\n",
      " '23-03-2021' '25-03-2021' '27-03-2021' '28-03-2021' '18-03-2021'\n",
      " '30-03-2021' '01-04-2021' '31-03-2021' '03-04-2021' '06-04-2021'\n",
      " '26-03-2021' '22-03-2021' '29-03-2021' '19-03-2021' '08-04-2021'\n",
      " '09-04-2021' '12-04-2021' '10-04-2021' '15-04-2021' '14-04-2021'\n",
      " '17-04-2021' '20-04-2021' '22-04-2021' '16-04-2021' '25-04-2021'\n",
      " '26-04-2021' '23-04-2021' '24-04-2021' '27-04-2021' '29-04-2021'\n",
      " '30-04-2021' '03-05-2021' '01-05-2021' '08-05-2021' '10-05-2021'\n",
      " '06-05-2021' '07-05-2021' '13-05-2021' '02-05-2021' '15-05-2021'\n",
      " '18-05-2021' '05-05-2021' '04-05-2021' '19-05-2021' '21-05-2021'\n",
      " '23-05-2021' '16-05-2021' '26-05-2021' '17-05-2021' '20-05-2021'\n",
      " '28-05-2021' '30-06-2021' '22-05-2021' '29-05-2021' '03-06-2021'\n",
      " '31-05-2021' '02-06-2021' '01-06-2021' '06-06-2021' '05-06-2021'\n",
      " '08-06-2021' '09-06-2021' '30-05-2021' '11-06-2021' '12-06-2021'\n",
      " '10-06-2021' '16-06-2021' '15-06-2021' '14-06-2021' '17-06-2021'\n",
      " '19-06-2021' '18-06-2021' '20-06-2021' '14-08-2021' '23-06-2021'\n",
      " '26-06-2021' '28-06-2021' '25-06-2021' '27-06-2021' '21-06-2021'\n",
      " '29-06-2021' '24-06-2021' '02-07-2021' '03-07-2021' '05-07-2021'\n",
      " '04-07-2021' '01-07-2021' '07-07-2021' '10-07-2021' '08-07-2021'\n",
      " '06-07-2021' '11-07-2021' '09-07-2021' '14-07-2021' '13-07-2021'\n",
      " '16-07-2021' '15-07-2021' '20-07-2021' '18-07-2021' '19-07-2021'\n",
      " '23-07-2021' '22-07-2021' '21-07-2021' '26-07-2021' '25-07-2021'\n",
      " '28-07-2021' '29-07-2021' '02-08-2021' '27-07-2021' '01-08-2021'\n",
      " '04-08-2021' '05-08-2021' '07-08-2021' '06-08-2021' '09-08-2021'\n",
      " '08-08-2021' '31-07-2021' '10-08-2021' '12-08-2021' '13-08-2021'\n",
      " '16-08-2021' '18-08-2021' '17-08-2021' '21-08-2021' '20-08-2021'\n",
      " '15-08-2021' '24-08-2021' '23-08-2021' '27-08-2021' '31-08-2021'\n",
      " '28-08-2021' '04-09-2021' '02-09-2021' '03-09-2021' '06-09-2021'\n",
      " '08-09-2021' '09-09-2021' '14-09-2021' '12-09-2021' '01-09-2021'\n",
      " '17-09-2021' '19-09-2021' '10-09-2021' '22-09-2021' '21-09-2021'\n",
      " '15-09-2021' '16-09-2021' '25-09-2021' '27-09-2021' '23-09-2021'\n",
      " '28-09-2021' '26-09-2021' '30-09-2021' '02-10-2021' '01-10-2021'\n",
      " '03-10-2021' '06-10-2021' '29-09-2021' '12-10-2021' '09-10-2021'\n",
      " '10-10-2021' '04-10-2021' '08-10-2021' '13-10-2021' '15-10-2021'\n",
      " '18-10-2021' '17-10-2021' '19-10-2021' '20-10-2021' '22-10-2021'\n",
      " '23-10-2021' '24-10-2021' '16-10-2021' '21-10-2021' '26-10-2021'\n",
      " '28-10-2021' '30-10-2021' '01-11-2021' '29-10-2021' '03-11-2021'\n",
      " '04-11-2021' '02-11-2021' '07-11-2021' '31-10-2021' '05-11-2021'\n",
      " '06-11-2021' '10-11-2021' '11-11-2021' '12-11-2021' '13-11-2021'\n",
      " '15-11-2021' '17-11-2021' '16-11-2021' '23-11-2021' '19-11-2021'\n",
      " '25-11-2021' '28-11-2021' '30-11-2021' '01-12-2021' '03-12-2021'\n",
      " '26-11-2021' '04-12-2021' '02-12-2021' '07-12-2021' '29-11-2021'\n",
      " '08-12-2021' '05-12-2021' '11-12-2021' '13-12-2021' '09-12-2021'\n",
      " '10-12-2021' '12-12-2021' '14-12-2021' '17-12-2021' '16-12-2021'\n",
      " '18-12-2021' '19-12-2021' '15-12-2021' '06-12-2021' '21-12-2021'\n",
      " '22-12-2021' '20-12-2021' '24-12-2021' '28-12-2021' '31-12-2021'\n",
      " '30-12-2021' '14-01-2021' '06-02-2021' '13-02-2021' '12-03-2021'\n",
      " '16-03-2021' '05-03-2021' '02-04-2021' '28-04-2021' '04-04-2021'\n",
      " '07-04-2021' '21-04-2021' '11-03-2021' '12-05-2021' '14-05-2021'\n",
      " '04-06-2021' '22-06-2021' '17-07-2021' '24-07-2021' '30-07-2021'\n",
      " '12-07-2021' '11-08-2021' '25-08-2021' '30-08-2021' '24-09-2021'\n",
      " '05-09-2021' '07-10-2021' '05-10-2021' '26-12-2021' '23-12-2021'\n",
      " '27-11-2021' '24-11-2021' '18-11-2021' '20-11-2021' '24-01-2021'\n",
      " '01-02-2021' '02-02-2021' '04-02-2021' '08-02-2021' '13-01-2021'\n",
      " '11-01-2021' '19-02-2021' '07-03-2021' '08-03-2021' '15-03-2021'\n",
      " '05-04-2021' '11-04-2021' '13-04-2021' '18-04-2021' '19-04-2021'\n",
      " '09-05-2021' '11-05-2021' '24-05-2021' '25-05-2021' '27-05-2021'\n",
      " '07-06-2021' '13-06-2021' '03-08-2021' '19-08-2021' '22-08-2021'\n",
      " '26-08-2021' '29-08-2021' '07-09-2021' '11-09-2021' '13-09-2021'\n",
      " '18-09-2021' '20-09-2021' '11-10-2021' '14-10-2021' '25-10-2021'\n",
      " '27-10-2021' '09-11-2021' '08-11-2021' '14-11-2021' '21-11-2021'\n",
      " '22-11-2021' '29-12-2021' '27-12-2021' '03-01-2021' '25-12-2021'\n",
      " '11-01-2022' '12-01-2022' '02-01-2022' '04-01-2022' '18-01-2022'\n",
      " '03-01-2022' '05-01-2022' '07-01-2022' '15-01-2022' '13-01-2022'\n",
      " '14-01-2022' '17-01-2022' '19-01-2022' '10-01-2022' '24-01-2022'\n",
      " '20-01-2022' '26-01-2022' '28-01-2022' '27-01-2022' '29-01-2022'\n",
      " '25-01-2022' '31-01-2022' '02-02-2022' '05-02-2022' '03-02-2022'\n",
      " '04-02-2022' '08-02-2022' '09-02-2022' '11-02-2022' '12-02-2022'\n",
      " '06-02-2022' '13-02-2022' '14-02-2022' '28-02-2022' '16-02-2022'\n",
      " '15-02-2022' '17-02-2022' '20-02-2022' '18-02-2022' '19-02-2022'\n",
      " '23-02-2022' '21-02-2022' '22-02-2022' '24-02-2022' '25-02-2022'\n",
      " '05-03-2022' '03-03-2022' '07-03-2022' '08-03-2022' '02-03-2022'\n",
      " '06-03-2022' '04-03-2022' '10-03-2022' '15-03-2022' '12-03-2022'\n",
      " '14-03-2022' '13-03-2022' '16-03-2022' '20-03-2022' '18-03-2022'\n",
      " '23-03-2022' '19-03-2022' '24-03-2022' '25-03-2022' '27-03-2022'\n",
      " '26-03-2022' '28-03-2022' '31-03-2022' '01-04-2022' '06-04-2022'\n",
      " '30-03-2022' '22-03-2022' '05-04-2022' '16-04-2022' '07-04-2022'\n",
      " '08-04-2022' '11-04-2022' '10-04-2022' '09-04-2022' '13-04-2022'\n",
      " '14-04-2022' '02-04-2022' '12-04-2022' '04-04-2022' '23-04-2022'\n",
      " '21-04-2022' '22-04-2022' '24-04-2022' '26-04-2022' '29-04-2022'\n",
      " '01-05-2022' '30-04-2022' '04-05-2022' '27-04-2022' '05-05-2022'\n",
      " '28-04-2022' '15-04-2022' '07-05-2022' '06-05-2022' '09-05-2022'\n",
      " '08-05-2022' '02-05-2022' '17-04-2022' '10-05-2022' '03-05-2022'\n",
      " '11-05-2022' '12-05-2022' '13-05-2022' '16-05-2022' '14-05-2022'\n",
      " '17-05-2022' '19-05-2022' '20-05-2022' '23-05-2022' '25-05-2022'\n",
      " '24-05-2022' '26-05-2022' '27-05-2022' '30-05-2022' '01-06-2022'\n",
      " '29-05-2022' '28-05-2022' '31-05-2022' '03-06-2022' '21-05-2022'\n",
      " '06-06-2022' '02-06-2022' '07-06-2022' '08-06-2022' '10-06-2022'\n",
      " '11-06-2022' '12-06-2022' '17-06-2022' '16-06-2022' '19-06-2022'\n",
      " '18-06-2022' '20-06-2022' '21-06-2022' '14-06-2022' '24-06-2022'\n",
      " '22-06-2022' '23-06-2022' '28-06-2022' '26-06-2022' '27-06-2022'\n",
      " '09-06-2022' '02-07-2022' '05-07-2022' '30-06-2022' '01-07-2022'\n",
      " '25-06-2022' '07-07-2022' '11-07-2022' '09-07-2022' '12-07-2022'\n",
      " '08-07-2022' '03-07-2022' '13-07-2022' '29-06-2022' '04-07-2022'\n",
      " '17-07-2022' '18-07-2022' '21-07-2022' '16-07-2022' '22-07-2022'\n",
      " '23-07-2022' '06-07-2022' '15-07-2022' '27-07-2022' '28-07-2022'\n",
      " '31-07-2022' '20-07-2022' '30-07-2022' '05-08-2022' '29-07-2022'\n",
      " '09-08-2022' '01-08-2022' '08-08-2022' '06-08-2022' '12-08-2022'\n",
      " '03-08-2022' '13-08-2022' '10-08-2022' '18-08-2022' '22-08-2022'\n",
      " '20-08-2022' '11-08-2022' '19-08-2022' '23-08-2022' '25-08-2022'\n",
      " '31-08-2022' '29-08-2022' '28-08-2022' '03-09-2022' '05-09-2022'\n",
      " '07-09-2022' '26-08-2022' '09-09-2022' '02-09-2022' '08-09-2022'\n",
      " '12-09-2022' '11-09-2022' '15-09-2022' '14-09-2022' '18-09-2022'\n",
      " '19-09-2022' '10-09-2022' '16-09-2022' '21-09-2022' '26-09-2022'\n",
      " '01-09-2022' '20-09-2022' '23-09-2022' '06-09-2022' '25-09-2022'\n",
      " '24-09-2022' '17-09-2022' '22-09-2022' '30-09-2022' '29-09-2022'\n",
      " '01-10-2022' '02-10-2022' '03-10-2022' '04-10-2022' '06-10-2022'\n",
      " '10-10-2022' '08-10-2022' '11-10-2022' '18-10-2022' '14-10-2022'\n",
      " '09-10-2022' '13-10-2022' '07-10-2022' '16-10-2022' '23-10-2022'\n",
      " '25-10-2022' '20-10-2022' '27-10-2022' '24-10-2022' '15-10-2022'\n",
      " '26-10-2022' '28-10-2022' '29-10-2022' '01-11-2022' '30-10-2022'\n",
      " '22-10-2022' '21-10-2022' '03-11-2022' '02-11-2022' '08-11-2022'\n",
      " '10-11-2022' '05-11-2022' '14-11-2022' '06-11-2022' '11-11-2022'\n",
      " '12-11-2022' '07-11-2022' '15-11-2022' '13-11-2022' '20-11-2022'\n",
      " '18-11-2022' '17-11-2022' '09-11-2022' '16-11-2022' '25-11-2022'\n",
      " '24-11-2022' '27-11-2022' '22-11-2022' '28-11-2022' '04-11-2022'\n",
      " '23-11-2022' '05-12-2022' '06-12-2022' '07-12-2022' '08-12-2022'\n",
      " '26-11-2022' '04-12-2022' '03-12-2022' '09-12-2022' '30-11-2022'\n",
      " '11-12-2022' '19-11-2022' '15-12-2022' '29-11-2022' '10-12-2022'\n",
      " '13-12-2022' '16-12-2022' '14-12-2022' '12-12-2022' '01-12-2022'\n",
      " '20-12-2022' '24-12-2022' '21-12-2022' '31-12-2022' '23-12-2022'\n",
      " '27-12-2022' '28-12-2022' '16-01-2022' '01-01-2022' '23-01-2022'\n",
      " '21-01-2022' '10-02-2022' '26-02-2022' '29-03-2022' '21-03-2022'\n",
      " '17-03-2022' '11-03-2022' '19-04-2022' '20-04-2022' '18-05-2022'\n",
      " '04-06-2022' '15-06-2022' '04-08-2022' '16-08-2022' '17-08-2022'\n",
      " '26-07-2022' '24-07-2022' '14-07-2022' '15-08-2022' '24-08-2022'\n",
      " '30-08-2022' '27-09-2022' '28-09-2022' '05-10-2022' '19-10-2022'\n",
      " '17-10-2022' '12-10-2022' '22-12-2022' '17-12-2022' '19-12-2022'\n",
      " '08-01-2022' '09-01-2022' '06-01-2022' '22-01-2022' '30-01-2022'\n",
      " '01-02-2022' '07-02-2022' '27-02-2022' '01-03-2022' '09-03-2022'\n",
      " '03-04-2022' '18-04-2022' '25-04-2022' '15-05-2022' '22-05-2022'\n",
      " '05-06-2022' '13-06-2022' '10-07-2022' '19-07-2022' '02-08-2022'\n",
      " '07-08-2022' '14-08-2022' '21-08-2022' '27-08-2022' '04-09-2022'\n",
      " '13-09-2022' '31-10-2022' '21-11-2022' '02-12-2022' '18-12-2022'\n",
      " '29-12-2022' '30-12-2022' '26-12-2022' '25-07-2022' '25-12-2022']\n",
      "\n",
      "--- Unique values in 'Day_of_Week' ---\n",
      "[4 1 0 2 5 3 6]\n",
      "\n",
      "--- Unique values in 'Junction_Control' ---\n",
      "[ 0.  1. nan  2.  3.  4.  5.]\n",
      "\n",
      "--- Unique values in 'Junction_Detail' ---\n",
      "[0 1 2 3 4 5 6 7 8]\n",
      "\n",
      "--- Unique values in 'Accident_Severity' ---\n",
      "[1 0 2]\n",
      "\n",
      "--- Unique values in 'Latitude' ---\n",
      "[51.512273 51.514399 51.486668 ... 57.585044 57.214898 57.57521 ]\n",
      "\n",
      "--- Unique values in 'Light_Conditions' ---\n",
      "[0 1 2 3 4]\n",
      "\n",
      "--- Unique values in 'Local_Authority_(District)' ---\n",
      "[185 158 404 176  80 372 155  55 332  39 160 183  14 111 230 202 173 381\n",
      " 272  13 168 193  96 382  46 198 152  23 163 132 350 214 190 280 128  86\n",
      " 319  16   3  60 144  27 419 194  78 397 325 269  26 178 279  50 261 284\n",
      " 410 300 336 201 192 208 293 354 342  32 406 373  51 282 256 378  94 156\n",
      "  73 204  71 384  95  72  84 130 383  30 246 228 375   4 329 145  63 348\n",
      "  22 251 110  90 112  74 104 390 358  98 298 157 421  92 281 296 301 162\n",
      " 292  53  36 379 195 191 105 286  15 303 237 242 124 189 165 273 219 343\n",
      "  24 413 380 107 295 309  91 199 337 344 125 229  56 328 355 338 417 207\n",
      " 414 420 169 307 274  47 326 244 306 258 360  42 345 385 247 287 254   5\n",
      " 135  31 103 171  75 236 102 314   9 209 227 253 146  19  49 289 318 317\n",
      " 239 200 120  33 398 196 211  67  25 159 291 174 248 255  87 391 100 187\n",
      " 122 250 323 313  54 264 114 177 139 151 252  38  45 188 322 243 217 347\n",
      " 142 335  12 180 387  21 215  65 311 203 119  48 392 238 386 366  97 170\n",
      " 334 339 340  37  68 133 206 361  17  40 331  83 376 161 367  64 283  11\n",
      " 418 312  77 221 324 308  70 259 377 400 393 409  35 271 412 290  18 182\n",
      " 164 267 138 330 118 408 149 226 127 362 167 131 222 288 134 153 333 275\n",
      " 388 349 411 356 210  99 150 368  57 364 351 205 374 302 304  10 106  43\n",
      " 415 166 175 389 197 218 126  93 285   8  76   2  88 186 262 233  58 265\n",
      " 369 234 371 136 316 394 277  62 359 115 216 212 315 245 299 357  44 327\n",
      " 401  20  89 148 346 363  69 143 353 407 402 294 184 249  34 395 266 116\n",
      "  79 270 235 405 141 101 416  85 154 181  52 370 231  29  28 223 278 213\n",
      "  59 365  41 225 352  61  66 260 268 172 403 257 305 224   1   0   6 263\n",
      " 109 140 129 121 297 399 220 137 341  82  81 147 117 123 276 179   7 396\n",
      " 240 241 320 321 232 113 310 108]\n",
      "\n",
      "--- Unique values in 'Carriageway_Hazards' ---\n",
      "[nan  0.  1.  2.  3.  4.]\n",
      "\n",
      "--- Unique values in 'Longitude' ---\n",
      "[-0.201349 -0.199248 -0.179599 ... -3.862727 -3.823997 -3.895673]\n",
      "\n",
      "--- Unique values in 'Number_of_Casualties' ---\n",
      "[ 1 11  3  2  4  5  6 10  8  7  9 13 12 14 16 18 15 19 21 17 27 48 40 24\n",
      " 26 22 42 43]\n",
      "\n",
      "--- Unique values in 'Number_of_Vehicles' ---\n",
      "[ 2  1  3  4  5  9  6  8  7 10 16 13 14 11 12 32 19]\n",
      "\n",
      "--- Unique values in 'Police_Force' ---\n",
      "[29  5  7 24 28 18  4 35 12 32 49 38 22  6 48 39 47 46  8 36 26 25 33  2\n",
      " 30 41  1 21 14 45 20 42 23 43  9  0 16 50 10 31 19 37 13 34 17 44 15 27\n",
      "  3 40 11]\n",
      "\n",
      "--- Unique values in 'Road_Surface_Conditions' ---\n",
      "[0 1 2 3 4]\n",
      "\n",
      "--- Unique values in 'Road_Type' ---\n",
      "[0 1 2 3 4]\n",
      "\n",
      "--- Unique values in 'Speed_limit' ---\n",
      "[30 20 50 40 70 60 10 15]\n",
      "\n",
      "--- Unique values in 'Time' ---\n",
      "['15:11' '10:59' '14:19' ... '05:17' '02:52' nan]\n",
      "\n",
      "--- Unique values in 'Urban_or_Rural_Area' ---\n",
      "[1 0]\n",
      "\n",
      "--- Unique values in 'Weather_Conditions' ---\n",
      "[0 7 2 4 1 3 6 5]\n",
      "\n",
      "--- Unique values in 'Vehicle_Type' ---\n",
      "[ 0  1  2  3  4  6  7 10  5 14  8 12 11  9 13]\n"
     ]
    }
   ],
   "source": [
    "for col in df.columns:\n",
    "    if col != 'Accident_Index':\n",
    "        print(f\"\\n--- Unique values in '{col}' ---\")\n",
    "        print(df[col].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fbdb6e81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.876819Z",
     "iopub.status.busy": "2025-07-16T13:22:55.876543Z",
     "iopub.status.idle": "2025-07-16T13:22:55.881737Z",
     "shell.execute_reply": "2025-07-16T13:22:55.880603Z"
    },
    "papermill": {
     "duration": 0.011253,
     "end_time": "2025-07-16T13:22:55.883313",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.872060",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Accident_Index', 'Accident Date', 'Day_of_Week', 'Junction_Control', 'Junction_Detail', 'Accident_Severity', 'Latitude', 'Light_Conditions', 'Local_Authority_(District)', 'Carriageway_Hazards', 'Longitude', 'Number_of_Casualties', 'Number_of_Vehicles', 'Police_Force', 'Road_Surface_Conditions', 'Road_Type', 'Speed_limit', 'Time', 'Urban_or_Rural_Area', 'Weather_Conditions', 'Vehicle_Type']\n",
      "Index(['Accident_Index', 'Accident Date', 'Day_of_Week', 'Junction_Control',\n",
      "       'Junction_Detail', 'Accident_Severity', 'Latitude', 'Light_Conditions',\n",
      "       'Local_Authority_(District)', 'Carriageway_Hazards', 'Longitude',\n",
      "       'Number_of_Casualties', 'Number_of_Vehicles', 'Police_Force',\n",
      "       'Road_Surface_Conditions', 'Road_Type', 'Speed_limit', 'Time',\n",
      "       'Urban_or_Rural_Area', 'Weather_Conditions', 'Vehicle_Type'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(df.columns.tolist())\n",
    "print(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9a4df225",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:55.892215Z",
     "iopub.status.busy": "2025-07-16T13:22:55.891980Z",
     "iopub.status.idle": "2025-07-16T13:22:59.241346Z",
     "shell.execute_reply": "2025-07-16T13:22:59.240442Z"
    },
    "papermill": {
     "duration": 3.356403,
     "end_time": "2025-07-16T13:22:59.243959",
     "exception": false,
     "start_time": "2025-07-16T13:22:55.887556",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model Comparison on Full Features:\n",
      "              Model                                      Best Params   RMSE  \\\n",
      "2             Lasso                                   {'alpha': 0.1}   9.21   \n",
      "0  LinearRegression                                               {}   9.30   \n",
      "1             Ridge                                   {'alpha': 0.1}   9.30   \n",
      "5               SVR  {'C': 10, 'gamma': 'scale', 'kernel': 'linear'}   9.38   \n",
      "4      RandomForest            {'max_depth': 10, 'n_estimators': 50}   9.72   \n",
      "3      DecisionTree                                 {'max_depth': 5}  11.44   \n",
      "\n",
      "   Accuracy (%)  RÂ² Score  \n",
      "2         98.32    0.9885  \n",
      "0         98.31    0.9883  \n",
      "1         98.30    0.9883  \n",
      "5         98.26    0.9881  \n",
      "4         98.11    0.9872  \n",
      "3         97.72    0.9823  \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1400x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from sklearn.preprocessing import LabelEncoder, StandardScaler\n",
    "from sklearn.metrics import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error, r2_score\n",
    "\n",
    "from sklearn.linear_model import LinearRegression, Ridge, Lasso\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.svm import SVR\n",
    "\n",
    "\n",
    "\n",
    "# Drop rows with missing target\n",
    "df.dropna(subset=['Accident Date'], inplace=True)\n",
    "\n",
    "# Convert 'Accident Date' to datetime\n",
    "df['Accident Date'] = pd.to_datetime(df['Accident Date'], dayfirst=True)\n",
    "\n",
    "# Feature Engineering\n",
    "df['Hour'] = pd.to_datetime(df['Time'], errors='coerce').dt.hour.fillna(0)\n",
    "df['Minute'] = pd.to_datetime(df['Time'], errors='coerce').dt.minute.fillna(0)\n",
    "df['Date'] = df['Accident Date'].dt.date\n",
    "\n",
    "# Group by date to get accident count per day\n",
    "target = df.groupby('Date').size().reset_index(name='y')\n",
    "\n",
    "# Aggregate features per day\n",
    "agg_features = df.groupby('Date').agg({\n",
    "    'Day_of_Week': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Junction_Control': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Junction_Detail': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Accident_Severity': 'mean',\n",
    "    'Latitude': 'mean',\n",
    "    'Longitude': 'mean',\n",
    "    'Light_Conditions': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Local_Authority_(District)': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Carriageway_Hazards': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Number_of_Casualties': 'sum',\n",
    "    'Number_of_Vehicles': 'sum',\n",
    "    'Police_Force': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Road_Surface_Conditions': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Road_Type': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Speed_limit': 'mean',\n",
    "    'Urban_or_Rural_Area': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Weather_Conditions': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Vehicle_Type': lambda x: x.mode()[0] if not x.mode().empty else x.iloc[0],\n",
    "    'Hour': 'mean',\n",
    "    'Minute': 'mean'\n",
    "}).reset_index()\n",
    "\n",
    "data = pd.merge(target, agg_features, on='Date')\n",
    "\n",
    "# Encode categorical columns\n",
    "categorical_cols = [\n",
    "    'Day_of_Week', 'Junction_Control', 'Junction_Detail', 'Light_Conditions',\n",
    "    'Local_Authority_(District)', 'Carriageway_Hazards', 'Police_Force',\n",
    "    'Road_Surface_Conditions', 'Road_Type', 'Urban_or_Rural_Area',\n",
    "    'Weather_Conditions', 'Vehicle_Type'\n",
    "]\n",
    "\n",
    "for col in categorical_cols:\n",
    "    le = LabelEncoder()\n",
    "    data[col] = le.fit_transform(data[col].astype(str))\n",
    "\n",
    "# Drop the Date column\n",
    "data = data.drop(columns=['Date'])\n",
    "\n",
    "# Split data\n",
    "X = data.drop(columns='y')\n",
    "y = data['y']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Standardize\n",
    "scaler = StandardScaler()\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_test = scaler.transform(X_test)\n",
    "\n",
    "# Models & Grid\n",
    "models = [\n",
    "    {'name': 'LinearRegression', 'model': LinearRegression(), 'params': {}},\n",
    "    {'name': 'Ridge', 'model': Ridge(), 'params': {'alpha': [0.1, 1, 10]}},\n",
    "    {'name': 'Lasso', 'model': Lasso(max_iter=10000), 'params': {'alpha': [0.1, 1, 10]}},\n",
    "    {'name': 'DecisionTree', 'model': DecisionTreeRegressor(), 'params': {'max_depth': [5, 10, 20]}},\n",
    "    {'name': 'RandomForest', 'model': RandomForestRegressor(), 'params': {'n_estimators': [10, 50], 'max_depth': [5, 10]}},\n",
    "    {'name': 'SVR', 'model': SVR(), 'params': {'kernel': ['linear', 'rbf'], 'C': [1, 10], 'gamma': ['scale']}},\n",
    "]\n",
    "\n",
    "results = []\n",
    "\n",
    "for item in models:\n",
    "    grid = GridSearchCV(item['model'], item['params'], cv=3, scoring='neg_mean_squared_error')\n",
    "    grid.fit(X_train, y_train)\n",
    "    best_model = grid.best_estimator_\n",
    "    y_pred = best_model.predict(X_test)\n",
    "    \n",
    "    mae = mean_absolute_error(y_test, y_pred)\n",
    "    rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "    mape = mean_absolute_percentage_error(y_test, y_pred)\n",
    "    accuracy = 100 - (mape * 100)\n",
    "    r2 = r2_score(y_test, y_pred)\n",
    "    \n",
    "    results.append({\n",
    "        'Model': item['name'],\n",
    "        'Best Params': grid.best_params_,\n",
    "        'MAE': round(mae, 2),\n",
    "        'RMSE': round(rmse, 2),\n",
    "        'MAPE (%)': round(mape * 100, 2),\n",
    "        'Accuracy (%)': round(accuracy, 2),\n",
    "        'RÂ² Score': round(r2, 4),\n",
    "        'y_pred': y_pred.tolist()\n",
    "    })\n",
    "\n",
    "results_df = pd.DataFrame(results).sort_values(by='RMSE')\n",
    "print(\"Model Comparison on Full Features:\")\n",
    "print(results_df[['Model', 'Best Params', 'RMSE', 'Accuracy (%)', 'RÂ² Score']])\n",
    "\n",
    "# Plot actual vs best predictions\n",
    "plt.figure(figsize=(14, 6))\n",
    "plt.plot(y_test.values, label='Actual', color='black', linewidth=2, marker='o')\n",
    "\n",
    "for _, row in results_df.iterrows():\n",
    "    plt.plot(row['y_pred'], label=row['Model'], linestyle='--')\n",
    "\n",
    "plt.title(\"Actual vs Predicted - Best Version of Each Model\")\n",
    "plt.xlabel(\"Sample\")\n",
    "plt.ylabel(\"Accident Count\")\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "16f7d8b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-16T13:22:59.260132Z",
     "iopub.status.busy": "2025-07-16T13:22:59.259719Z",
     "iopub.status.idle": "2025-07-16T13:42:18.507594Z",
     "shell.execute_reply": "2025-07-16T13:42:18.506849Z"
    },
    "papermill": {
     "duration": 1159.26491,
     "end_time": "2025-07-16T13:42:18.516304",
     "exception": false,
     "start_time": "2025-07-16T13:22:59.251394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training model 1 with hyperparameters: {'layers': [64, 32], 'dropout': 0.3, 'lr': 0.001, 'batch_size': 32, 'epochs': 20}\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-07-16 13:23:00.021888: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:152] failed call to cuInit: INTERNAL: CUDA error: Failed call to cuInit: UNKNOWN ERROR (303)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training model 2 with hyperparameters: {'layers': [128, 64], 'dropout': 0.5, 'lr': 0.0005, 'batch_size': 64, 'epochs': 30}\n",
      "\n",
      "Training model 3 with hyperparameters: {'layers': [32, 16], 'dropout': 0.2, 'lr': 0.005, 'batch_size': 16, 'epochs': 15}\n",
      "\n",
      "Evaluation Summary:\n",
      "   Model     Layers  Dropout  Learning Rate  Batch Size  Epochs  \\\n",
      "0      1   [64, 32]      0.3         0.0010          32      20   \n",
      "1      2  [128, 64]      0.5         0.0005          64      30   \n",
      "2      3   [32, 16]      0.2         0.0050          16      15   \n",
      "\n",
      "   Test Accuracy  Test Loss  \n",
      "0          0.855        NaN  \n",
      "1          0.855        NaN  \n",
      "2          0.855        NaN  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense, Dropout\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.preprocessing import StandardScaler, LabelEncoder, MinMaxScaler\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "\n",
    "# Preprocess 'Accident Date'\n",
    "df['Accident Date'] = pd.to_datetime(df['Accident Date'], dayfirst=True, errors='coerce')\n",
    "df['day'] = df['Accident Date'].dt.day\n",
    "df['month'] = df['Accident Date'].dt.month\n",
    "df['year'] = df['Accident Date'].dt.year\n",
    "\n",
    "date_scaler = MinMaxScaler()\n",
    "df[['day_norm', 'month_norm', 'year_norm']] = date_scaler.fit_transform(df[['day', 'month', 'year']])\n",
    "df['Date_Encoded'] = df['day_norm'] + df['month_norm'] + df['year_norm']\n",
    "\n",
    "# Convert 'Time' to minutes since midnight and normalize\n",
    "df['Time'] = pd.to_datetime(df['Time'], format='%H:%M', errors='coerce')\n",
    "df['Minutes_Since_Midnight'] = (df['Time'].dt.hour * 60 + df['Time'].dt.minute) / (24 * 60)\n",
    "df.drop(columns=['Time'], inplace=True)\n",
    "\n",
    "# Drop unnecessary columns\n",
    "df.drop(columns=['Accident_Index', 'Accident Date', 'day', 'month', 'year', 'day_norm', 'month_norm', 'year_norm'], inplace=True)\n",
    "\n",
    "# Encode non-numeric features\n",
    "for col in df.columns:\n",
    "    if df[col].dtype == 'object':\n",
    "        df[col] = LabelEncoder().fit_transform(df[col].astype(str))\n",
    "\n",
    "# Separate features and target\n",
    "X = df.drop(['Accident_Severity'], axis=1)\n",
    "y = df['Accident_Severity']\n",
    "\n",
    "# Encode target\n",
    "le = LabelEncoder()\n",
    "y_encoded = le.fit_transform(y)\n",
    "y_categorical = to_categorical(y_encoded)\n",
    "\n",
    "# Train/test split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y_categorical, test_size=0.2, random_state=42)\n",
    "\n",
    "# Normalize features\n",
    "scaler = StandardScaler()\n",
    "X_train = scaler.fit_transform(X_train)\n",
    "X_test = scaler.transform(X_test)\n",
    "\n",
    "# Define hyperparameter grid\n",
    "hyperparams = [\n",
    "    {'layers': [64, 32], 'dropout': 0.3, 'lr': 0.001, 'batch_size': 32, 'epochs': 20},\n",
    "    {'layers': [128, 64], 'dropout': 0.5, 'lr': 0.0005, 'batch_size': 64, 'epochs': 30},\n",
    "    {'layers': [32, 16], 'dropout': 0.2, 'lr': 0.005, 'batch_size': 16, 'epochs': 15},\n",
    "]\n",
    "\n",
    "results = []\n",
    "\n",
    "# Train models with different hyperparameters\n",
    "for i, hp in enumerate(hyperparams):\n",
    "    print(f\"\\nTraining model {i+1} with hyperparameters: {hp}\")\n",
    "    \n",
    "    model = Sequential()\n",
    "    model.add(Dense(hp['layers'][0], activation='relu', input_shape=(X_train.shape[1],)))\n",
    "    model.add(Dropout(hp['dropout']))\n",
    "    model.add(Dense(hp['layers'][1], activation='relu'))\n",
    "    model.add(Dropout(hp['dropout']))\n",
    "    model.add(Dense(y_categorical.shape[1], activation='softmax'))\n",
    "\n",
    "    optimizer = Adam(learning_rate=hp['lr'])\n",
    "    model.compile(optimizer=optimizer, loss='categorical_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "    history = model.fit(X_train, y_train, \n",
    "                        validation_data=(X_test, y_test),\n",
    "                        epochs=hp['epochs'], \n",
    "                        batch_size=hp['batch_size'], \n",
    "                        verbose=0)\n",
    "\n",
    "    loss, acc = model.evaluate(X_test, y_test, verbose=0)\n",
    "    results.append({\n",
    "        'Model': i+1,\n",
    "        'Layers': hp['layers'],\n",
    "        'Dropout': hp['dropout'],\n",
    "        'Learning Rate': hp['lr'],\n",
    "        'Batch Size': hp['batch_size'],\n",
    "        'Epochs': hp['epochs'],\n",
    "        'Test Accuracy': round(acc, 4),\n",
    "        'Test Loss': round(loss, 4)\n",
    "    })\n",
    "\n",
    "results_df = pd.DataFrame(results)\n",
    "print(\"\\nEvaluation Summary:\")\n",
    "print(results_df)\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7833778,
     "sourceId": 12420414,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1194.519144,
   "end_time": "2025-07-16T13:42:21.667104",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-16T13:22:27.147960",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
